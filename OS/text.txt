
kernel.bin：     文件格式 elf32-i386


Disassembly of section .text:

00030400 <_start>:
   30400:	e8 9c 09 00 00       	call   30da1 <main>
   30405:	eb fe                	jmp    30405 <_start+0x5>

00030407 <restart>:
   30407:	66 b8 33 00          	mov    $0x33,%ax
   3040b:	8e d8                	mov    %eax,%ds
   3040d:	8e e8                	mov    %eax,%gs
   3040f:	8e c0                	mov    %eax,%es
   30411:	89 e0                	mov    %esp,%eax
   30413:	8b 64 24 04          	mov    0x4(%esp),%esp
   30417:	83 c4 34             	add    $0x34,%esp
   3041a:	cb                   	lret   

0003041b <isr0>:
   3041b:	fa                   	cli    
   3041c:	6a 00                	push   $0x0
   3041e:	6a 00                	push   $0x0
   30420:	e9 c9 01 00 00       	jmp    305ee <isr_common_stub>

00030425 <isr1>:
   30425:	fa                   	cli    
   30426:	6a 00                	push   $0x0
   30428:	6a 01                	push   $0x1
   3042a:	e9 bf 01 00 00       	jmp    305ee <isr_common_stub>

0003042f <isr2>:
   3042f:	fa                   	cli    
   30430:	6a 00                	push   $0x0
   30432:	6a 02                	push   $0x2
   30434:	e9 b5 01 00 00       	jmp    305ee <isr_common_stub>

00030439 <isr3>:
   30439:	fa                   	cli    
   3043a:	6a 00                	push   $0x0
   3043c:	6a 03                	push   $0x3
   3043e:	e9 ab 01 00 00       	jmp    305ee <isr_common_stub>

00030443 <isr4>:
   30443:	fa                   	cli    
   30444:	6a 00                	push   $0x0
   30446:	6a 04                	push   $0x4
   30448:	e9 a1 01 00 00       	jmp    305ee <isr_common_stub>

0003044d <isr5>:
   3044d:	fa                   	cli    
   3044e:	6a 00                	push   $0x0
   30450:	6a 05                	push   $0x5
   30452:	e9 97 01 00 00       	jmp    305ee <isr_common_stub>

00030457 <isr6>:
   30457:	fa                   	cli    
   30458:	6a 00                	push   $0x0
   3045a:	6a 06                	push   $0x6
   3045c:	e9 8d 01 00 00       	jmp    305ee <isr_common_stub>

00030461 <isr7>:
   30461:	fa                   	cli    
   30462:	6a 00                	push   $0x0
   30464:	6a 07                	push   $0x7
   30466:	e9 83 01 00 00       	jmp    305ee <isr_common_stub>

0003046b <isr8>:
   3046b:	fa                   	cli    
   3046c:	6a 08                	push   $0x8
   3046e:	e9 7b 01 00 00       	jmp    305ee <isr_common_stub>

00030473 <isr9>:
   30473:	fa                   	cli    
   30474:	6a 00                	push   $0x0
   30476:	6a 09                	push   $0x9
   30478:	e9 71 01 00 00       	jmp    305ee <isr_common_stub>

0003047d <isr10>:
   3047d:	fa                   	cli    
   3047e:	6a 0a                	push   $0xa
   30480:	e9 69 01 00 00       	jmp    305ee <isr_common_stub>

00030485 <isr11>:
   30485:	fa                   	cli    
   30486:	6a 0b                	push   $0xb
   30488:	e9 61 01 00 00       	jmp    305ee <isr_common_stub>

0003048d <isr12>:
   3048d:	fa                   	cli    
   3048e:	6a 0c                	push   $0xc
   30490:	e9 59 01 00 00       	jmp    305ee <isr_common_stub>

00030495 <isr13>:
   30495:	fa                   	cli    
   30496:	6a 0d                	push   $0xd
   30498:	e9 51 01 00 00       	jmp    305ee <isr_common_stub>

0003049d <isr14>:
   3049d:	fa                   	cli    
   3049e:	6a 0e                	push   $0xe
   304a0:	e9 49 01 00 00       	jmp    305ee <isr_common_stub>

000304a5 <isr15>:
   304a5:	fa                   	cli    
   304a6:	6a 0f                	push   $0xf
   304a8:	e9 41 01 00 00       	jmp    305ee <isr_common_stub>

000304ad <isr16>:
   304ad:	fa                   	cli    
   304ae:	6a 10                	push   $0x10
   304b0:	e9 39 01 00 00       	jmp    305ee <isr_common_stub>

000304b5 <isr17>:
   304b5:	fa                   	cli    
   304b6:	6a 11                	push   $0x11
   304b8:	e9 31 01 00 00       	jmp    305ee <isr_common_stub>

000304bd <isr18>:
   304bd:	fa                   	cli    
   304be:	6a 12                	push   $0x12
   304c0:	e9 29 01 00 00       	jmp    305ee <isr_common_stub>

000304c5 <isr19>:
   304c5:	fa                   	cli    
   304c6:	6a 13                	push   $0x13
   304c8:	e9 21 01 00 00       	jmp    305ee <isr_common_stub>

000304cd <isr20>:
   304cd:	fa                   	cli    
   304ce:	6a 00                	push   $0x0
   304d0:	6a 14                	push   $0x14
   304d2:	e9 17 01 00 00       	jmp    305ee <isr_common_stub>

000304d7 <isr21>:
   304d7:	fa                   	cli    
   304d8:	6a 00                	push   $0x0
   304da:	6a 15                	push   $0x15
   304dc:	e9 0d 01 00 00       	jmp    305ee <isr_common_stub>

000304e1 <isr22>:
   304e1:	fa                   	cli    
   304e2:	6a 00                	push   $0x0
   304e4:	6a 16                	push   $0x16
   304e6:	e9 03 01 00 00       	jmp    305ee <isr_common_stub>

000304eb <isr23>:
   304eb:	fa                   	cli    
   304ec:	6a 00                	push   $0x0
   304ee:	6a 17                	push   $0x17
   304f0:	e9 f9 00 00 00       	jmp    305ee <isr_common_stub>

000304f5 <isr24>:
   304f5:	fa                   	cli    
   304f6:	6a 00                	push   $0x0
   304f8:	6a 18                	push   $0x18
   304fa:	e9 ef 00 00 00       	jmp    305ee <isr_common_stub>

000304ff <isr25>:
   304ff:	fa                   	cli    
   30500:	6a 00                	push   $0x0
   30502:	6a 19                	push   $0x19
   30504:	e9 e5 00 00 00       	jmp    305ee <isr_common_stub>

00030509 <isr26>:
   30509:	fa                   	cli    
   3050a:	6a 00                	push   $0x0
   3050c:	6a 1a                	push   $0x1a
   3050e:	e9 db 00 00 00       	jmp    305ee <isr_common_stub>

00030513 <isr27>:
   30513:	fa                   	cli    
   30514:	6a 00                	push   $0x0
   30516:	6a 1b                	push   $0x1b
   30518:	e9 d1 00 00 00       	jmp    305ee <isr_common_stub>

0003051d <isr28>:
   3051d:	fa                   	cli    
   3051e:	6a 00                	push   $0x0
   30520:	6a 1c                	push   $0x1c
   30522:	e9 c7 00 00 00       	jmp    305ee <isr_common_stub>

00030527 <isr29>:
   30527:	fa                   	cli    
   30528:	6a 00                	push   $0x0
   3052a:	6a 1d                	push   $0x1d
   3052c:	e9 bd 00 00 00       	jmp    305ee <isr_common_stub>

00030531 <isr30>:
   30531:	fa                   	cli    
   30532:	6a 00                	push   $0x0
   30534:	6a 1e                	push   $0x1e
   30536:	e9 b3 00 00 00       	jmp    305ee <isr_common_stub>

0003053b <isr31>:
   3053b:	fa                   	cli    
   3053c:	6a 00                	push   $0x0
   3053e:	6a 1f                	push   $0x1f
   30540:	e9 a9 00 00 00       	jmp    305ee <isr_common_stub>

00030545 <isr255>:
   30545:	fa                   	cli    
   30546:	6a 00                	push   $0x0
   30548:	68 ff 00 00 00       	push   $0xff
   3054d:	e9 9c 00 00 00       	jmp    305ee <isr_common_stub>

00030552 <irq0>:
   30552:	fa                   	cli    
   30553:	6a 00                	push   $0x0
   30555:	6a 20                	push   $0x20
   30557:	eb 69                	jmp    305c2 <irq_common_stub>

00030559 <irq1>:
   30559:	fa                   	cli    
   3055a:	6a 00                	push   $0x0
   3055c:	6a 21                	push   $0x21
   3055e:	eb 62                	jmp    305c2 <irq_common_stub>

00030560 <irq2>:
   30560:	fa                   	cli    
   30561:	6a 00                	push   $0x0
   30563:	6a 22                	push   $0x22
   30565:	eb 5b                	jmp    305c2 <irq_common_stub>

00030567 <irq3>:
   30567:	fa                   	cli    
   30568:	6a 00                	push   $0x0
   3056a:	6a 23                	push   $0x23
   3056c:	eb 54                	jmp    305c2 <irq_common_stub>

0003056e <irq4>:
   3056e:	fa                   	cli    
   3056f:	6a 00                	push   $0x0
   30571:	6a 24                	push   $0x24
   30573:	eb 4d                	jmp    305c2 <irq_common_stub>

00030575 <irq5>:
   30575:	fa                   	cli    
   30576:	6a 00                	push   $0x0
   30578:	6a 25                	push   $0x25
   3057a:	eb 46                	jmp    305c2 <irq_common_stub>

0003057c <irq6>:
   3057c:	fa                   	cli    
   3057d:	6a 00                	push   $0x0
   3057f:	6a 26                	push   $0x26
   30581:	eb 3f                	jmp    305c2 <irq_common_stub>

00030583 <irq7>:
   30583:	fa                   	cli    
   30584:	6a 00                	push   $0x0
   30586:	6a 27                	push   $0x27
   30588:	eb 38                	jmp    305c2 <irq_common_stub>

0003058a <irq8>:
   3058a:	fa                   	cli    
   3058b:	6a 00                	push   $0x0
   3058d:	6a 28                	push   $0x28
   3058f:	eb 31                	jmp    305c2 <irq_common_stub>

00030591 <irq9>:
   30591:	fa                   	cli    
   30592:	6a 00                	push   $0x0
   30594:	6a 29                	push   $0x29
   30596:	eb 2a                	jmp    305c2 <irq_common_stub>

00030598 <irq10>:
   30598:	fa                   	cli    
   30599:	6a 00                	push   $0x0
   3059b:	6a 2a                	push   $0x2a
   3059d:	eb 23                	jmp    305c2 <irq_common_stub>

0003059f <irq11>:
   3059f:	fa                   	cli    
   305a0:	6a 00                	push   $0x0
   305a2:	6a 2b                	push   $0x2b
   305a4:	eb 1c                	jmp    305c2 <irq_common_stub>

000305a6 <irq12>:
   305a6:	fa                   	cli    
   305a7:	6a 00                	push   $0x0
   305a9:	6a 2c                	push   $0x2c
   305ab:	eb 15                	jmp    305c2 <irq_common_stub>

000305ad <irq13>:
   305ad:	fa                   	cli    
   305ae:	6a 00                	push   $0x0
   305b0:	6a 2d                	push   $0x2d
   305b2:	eb 0e                	jmp    305c2 <irq_common_stub>

000305b4 <irq14>:
   305b4:	fa                   	cli    
   305b5:	6a 00                	push   $0x0
   305b7:	6a 2e                	push   $0x2e
   305b9:	eb 07                	jmp    305c2 <irq_common_stub>

000305bb <irq15>:
   305bb:	fa                   	cli    
   305bc:	6a 00                	push   $0x0
   305be:	6a 2f                	push   $0x2f
   305c0:	eb 00                	jmp    305c2 <irq_common_stub>

000305c2 <irq_common_stub>:
   305c2:	60                   	pusha  
   305c3:	66 8c d8             	mov    %ds,%ax
   305c6:	50                   	push   %eax
   305c7:	66 b8 18 00          	mov    $0x18,%ax
   305cb:	8e d8                	mov    %eax,%ds
   305cd:	8e c0                	mov    %eax,%es
   305cf:	8e e0                	mov    %eax,%fs
   305d1:	8e e8                	mov    %eax,%gs
   305d3:	8e d0                	mov    %eax,%ss
   305d5:	54                   	push   %esp
   305d6:	e8 b3 10 00 00       	call   3168e <irq_handler>
   305db:	83 c4 04             	add    $0x4,%esp
   305de:	5b                   	pop    %ebx
   305df:	8e db                	mov    %ebx,%ds
   305e1:	8e c3                	mov    %ebx,%es
   305e3:	8e e3                	mov    %ebx,%fs
   305e5:	8e eb                	mov    %ebx,%gs
   305e7:	8e d3                	mov    %ebx,%ss
   305e9:	61                   	popa   
   305ea:	83 c4 08             	add    $0x8,%esp
   305ed:	cf                   	iret   

000305ee <isr_common_stub>:
   305ee:	60                   	pusha  
   305ef:	66 8c d8             	mov    %ds,%ax
   305f2:	50                   	push   %eax
   305f3:	66 b8 18 00          	mov    $0x18,%ax
   305f7:	8e d8                	mov    %eax,%ds
   305f9:	8e c0                	mov    %eax,%es
   305fb:	8e e0                	mov    %eax,%fs
   305fd:	8e e8                	mov    %eax,%gs
   305ff:	8e d0                	mov    %eax,%ss
   30601:	54                   	push   %esp
   30602:	e8 fc 0f 00 00       	call   31603 <isr_handler>
   30607:	83 c4 04             	add    $0x4,%esp
   3060a:	5b                   	pop    %ebx
   3060b:	8e db                	mov    %ebx,%ds
   3060d:	8e c3                	mov    %ebx,%es
   3060f:	8e e3                	mov    %ebx,%fs
   30611:	8e eb                	mov    %ebx,%gs
   30613:	8e d3                	mov    %ebx,%ss
   30615:	61                   	popa   
   30616:	83 c4 08             	add    $0x8,%esp
   30619:	cf                   	iret   

0003061a <io_hlt>:
   3061a:	f4                   	hlt    
   3061b:	c3                   	ret    

0003061c <memcpy>:
   3061c:	31 c0                	xor    %eax,%eax
   3061e:	31 ff                	xor    %edi,%edi
   30620:	31 c9                	xor    %ecx,%ecx
   30622:	8b 7c 24 04          	mov    0x4(%esp),%edi
   30626:	66 8b 44 24 08       	mov    0x8(%esp),%ax
   3062b:	8b 4c 24 0c          	mov    0xc(%esp),%ecx

0003062f <memcpy.membg>:
   3062f:	66 89 07             	mov    %ax,(%edi)
   30632:	47                   	inc    %edi
   30633:	49                   	dec    %ecx
   30634:	75 f9                	jne    3062f <memcpy.membg>
   30636:	c3                   	ret    

00030637 <io_out8>:
   30637:	8b 54 24 04          	mov    0x4(%esp),%edx
   3063b:	8a 44 24 08          	mov    0x8(%esp),%al
   3063f:	ee                   	out    %al,(%dx)
   30640:	c3                   	ret    

00030641 <io_in8>:
   30641:	8b 54 24 04          	mov    0x4(%esp),%edx
   30645:	b8 00 00 00 00       	mov    $0x0,%eax
   3064a:	ec                   	in     (%dx),%al
   3064b:	c3                   	ret    

0003064c <io_cli>:
   3064c:	fa                   	cli    
   3064d:	c3                   	ret    

0003064e <io_sti>:
   3064e:	fb                   	sti    
   3064f:	c3                   	ret    

00030650 <io_load_eflags>:
   30650:	9c                   	pushf  
   30651:	58                   	pop    %eax
   30652:	c3                   	ret    

00030653 <io_store_eflags>:
   30653:	8b 44 24 04          	mov    0x4(%esp),%eax
   30657:	50                   	push   %eax
   30658:	9d                   	popf   
   30659:	c3                   	ret    

0003065a <load_cr0>:
   3065a:	0f 20 c0             	mov    %cr0,%eax
   3065d:	c3                   	ret    

0003065e <store_cr0>:
   3065e:	8b 44 24 04          	mov    0x4(%esp),%eax
   30662:	0f 22 c0             	mov    %eax,%cr0
   30665:	c3                   	ret    

00030666 <io_delay>:
   30666:	90                   	nop
   30667:	90                   	nop
   30668:	90                   	nop
   30669:	90                   	nop
   3066a:	c3                   	ret    

0003066b <load_idtr>:
   3066b:	66 8b 44 24 04       	mov    0x4(%esp),%ax
   30670:	66 89 44 24 06       	mov    %ax,0x6(%esp)
   30675:	0f 01 5c 24 06       	lidtl  0x6(%esp)
   3067a:	c3                   	ret    

0003067b <load_gdtr>:
   3067b:	66 8b 44 24 04       	mov    0x4(%esp),%ax
   30680:	66 89 44 24 06       	mov    %ax,0x6(%esp)
   30685:	0f 01 54 24 06       	lgdtl  0x6(%esp)
   3068a:	66 8c d8             	mov    %ds,%ax
   3068d:	8e e0                	mov    %eax,%fs
   3068f:	8e c0                	mov    %eax,%es
   30691:	c3                   	ret    

00030692 <load_tr>:
   30692:	66 8b 44 24 04       	mov    0x4(%esp),%ax
   30697:	0f 00 d8             	ltr    %ax

0003069a <create_int>:
   3069a:	cd 80                	int    $0x80
   3069c:	c3                   	ret    

0003069d <register_clock>:
   3069d:	e8 87 07 00 00       	call   30e29 <Clock>
   306a2:	cf                   	iret   

000306a3 <memtest_sub>:
   306a3:	57                   	push   %edi
   306a4:	56                   	push   %esi
   306a5:	53                   	push   %ebx
   306a6:	be 55 aa 55 aa       	mov    $0xaa55aa55,%esi
   306ab:	bf aa 55 aa 55       	mov    $0x55aa55aa,%edi
   306b0:	8b 44 24 10          	mov    0x10(%esp),%eax

000306b4 <mts_loop>:
   306b4:	89 c3                	mov    %eax,%ebx
   306b6:	81 c3 fc 0f 00 00    	add    $0xffc,%ebx
   306bc:	8b 13                	mov    (%ebx),%edx
   306be:	89 33                	mov    %esi,(%ebx)
   306c0:	83 33 ff             	xorl   $0xffffffff,(%ebx)
   306c3:	3b 3b                	cmp    (%ebx),%edi
   306c5:	75 18                	jne    306df <mts_fin>
   306c7:	83 33 ff             	xorl   $0xffffffff,(%ebx)
   306ca:	3b 33                	cmp    (%ebx),%esi
   306cc:	75 11                	jne    306df <mts_fin>
   306ce:	89 13                	mov    %edx,(%ebx)
   306d0:	05 00 10 00 00       	add    $0x1000,%eax
   306d5:	3b 44 24 14          	cmp    0x14(%esp),%eax
   306d9:	76 d9                	jbe    306b4 <mts_loop>
   306db:	5b                   	pop    %ebx
   306dc:	5e                   	pop    %esi
   306dd:	5f                   	pop    %edi
   306de:	c3                   	ret    

000306df <mts_fin>:
   306df:	89 13                	mov    %edx,(%ebx)
   306e1:	5b                   	pop    %ebx
   306e2:	5e                   	pop    %esi
   306e3:	5f                   	pop    %edi
   306e4:	c3                   	ret    

000306e5 <WriteMem8>:
   306e5:	8b 54 24 08          	mov    0x8(%esp),%edx
   306e9:	8b 44 24 04          	mov    0x4(%esp),%eax
   306ed:	88 10                	mov    %dl,(%eax)
   306ef:	c3                   	ret    

000306f0 <InitTimer>:
   306f0:	56                   	push   %esi
   306f1:	53                   	push   %ebx
   306f2:	83 ec 0c             	sub    $0xc,%esp
   306f5:	e8 57 00 00 00       	call   30751 <__x86.get_pc_thunk.bx>
   306fa:	81 c3 06 29 00 00    	add    $0x2906,%ebx
   30700:	c7 c0 e0 34 03 00    	mov    $0x334e0,%eax
   30706:	c7 c2 68 0e 03 00    	mov    $0x30e68,%edx
   3070c:	89 90 80 00 00 00    	mov    %edx,0x80(%eax)
   30712:	b8 60 7b 1e 47       	mov    $0x471e7b60,%eax
   30717:	ba 00 00 00 00       	mov    $0x0,%edx
   3071c:	f7 74 24 18          	divl   0x18(%esp)
   30720:	89 c6                	mov    %eax,%esi
   30722:	6a 36                	push   $0x36
   30724:	6a 43                	push   $0x43
   30726:	e8 0c ff ff ff       	call   30637 <io_out8>
   3072b:	83 c4 08             	add    $0x8,%esp
   3072e:	89 f0                	mov    %esi,%eax
   30730:	0f b6 c0             	movzbl %al,%eax
   30733:	50                   	push   %eax
   30734:	6a 40                	push   $0x40
   30736:	e8 fc fe ff ff       	call   30637 <io_out8>
   3073b:	83 c4 08             	add    $0x8,%esp
   3073e:	89 f0                	mov    %esi,%eax
   30740:	0f b6 f4             	movzbl %ah,%esi
   30743:	56                   	push   %esi
   30744:	6a 40                	push   $0x40
   30746:	e8 ec fe ff ff       	call   30637 <io_out8>
   3074b:	83 c4 14             	add    $0x14,%esp
   3074e:	5b                   	pop    %ebx
   3074f:	5e                   	pop    %esi
   30750:	c3                   	ret    

00030751 <__x86.get_pc_thunk.bx>:
   30751:	8b 1c 24             	mov    (%esp),%ebx
   30754:	c3                   	ret    

00030755 <InitMemory>:
   30755:	e8 cd 00 00 00       	call   30827 <__x86.get_pc_thunk.cx>
   3075a:	81 c1 a6 28 00 00    	add    $0x28a6,%ecx
   30760:	c7 c0 f4 38 03 00    	mov    $0x338f4,%eax
   30766:	8b 00                	mov    (%eax),%eax
   30768:	c1 e0 08             	shl    $0x8,%eax
   3076b:	c7 c2 f0 38 03 00    	mov    $0x338f0,%edx
   30771:	89 02                	mov    %eax,(%edx)
   30773:	c7 c2 ec 38 03 00    	mov    $0x338ec,%edx
   30779:	c7 02 00 00 15 00    	movl   $0x150000,(%edx)
   3077f:	c7 81 20 04 00 00 00 	movl   $0x0,0x420(%ecx)
   30786:	00 00 00 
   30789:	85 c0                	test   %eax,%eax
   3078b:	7e 2c                	jle    307b9 <InitMemory+0x64>
   3078d:	56                   	push   %esi
   3078e:	53                   	push   %ebx
   3078f:	ba 00 00 30 00       	mov    $0x300000,%edx
   30794:	b8 00 00 00 00       	mov    $0x0,%eax
   30799:	c7 c6 ec 38 03 00    	mov    $0x338ec,%esi
   3079f:	c7 c3 f0 38 03 00    	mov    $0x338f0,%ebx
   307a5:	8b 0e                	mov    (%esi),%ecx
   307a7:	89 14 81             	mov    %edx,(%ecx,%eax,4)
   307aa:	83 c0 01             	add    $0x1,%eax
   307ad:	81 c2 00 10 00 00    	add    $0x1000,%edx
   307b3:	39 03                	cmp    %eax,(%ebx)
   307b5:	7f ee                	jg     307a5 <InitMemory+0x50>
   307b7:	5b                   	pop    %ebx
   307b8:	5e                   	pop    %esi
   307b9:	f3 c3                	repz ret 

000307bb <MallocPage>:
   307bb:	53                   	push   %ebx
   307bc:	e8 62 00 00 00       	call   30823 <__x86.get_pc_thunk.dx>
   307c1:	81 c2 3f 28 00 00    	add    $0x283f,%edx
   307c7:	8b 8a 20 04 00 00    	mov    0x420(%edx),%ecx
   307cd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   307d2:	c7 c3 f0 38 03 00    	mov    $0x338f0,%ebx
   307d8:	3b 0b                	cmp    (%ebx),%ecx
   307da:	72 02                	jb     307de <MallocPage+0x23>
   307dc:	5b                   	pop    %ebx
   307dd:	c3                   	ret    
   307de:	c7 c0 ec 38 03 00    	mov    $0x338ec,%eax
   307e4:	8b 00                	mov    (%eax),%eax
   307e6:	8d 59 01             	lea    0x1(%ecx),%ebx
   307e9:	89 9a 20 04 00 00    	mov    %ebx,0x420(%edx)
   307ef:	8b 04 88             	mov    (%eax,%ecx,4),%eax
   307f2:	eb e8                	jmp    307dc <MallocPage+0x21>

000307f4 <FreePage>:
   307f4:	e8 2a 00 00 00       	call   30823 <__x86.get_pc_thunk.dx>
   307f9:	81 c2 07 28 00 00    	add    $0x2807,%edx
   307ff:	8b 82 20 04 00 00    	mov    0x420(%edx),%eax
   30805:	85 c0                	test   %eax,%eax
   30807:	74 18                	je     30821 <FreePage+0x2d>
   30809:	c7 c1 ec 38 03 00    	mov    $0x338ec,%ecx
   3080f:	8b 09                	mov    (%ecx),%ecx
   30811:	83 e8 01             	sub    $0x1,%eax
   30814:	89 82 20 04 00 00    	mov    %eax,0x420(%edx)
   3081a:	8b 54 24 04          	mov    0x4(%esp),%edx
   3081e:	89 14 81             	mov    %edx,(%ecx,%eax,4)
   30821:	f3 c3                	repz ret 

00030823 <__x86.get_pc_thunk.dx>:
   30823:	8b 14 24             	mov    (%esp),%edx
   30826:	c3                   	ret    

00030827 <__x86.get_pc_thunk.cx>:
   30827:	8b 0c 24             	mov    (%esp),%ecx
   3082a:	c3                   	ret    

0003082b <printi>:
   3082b:	55                   	push   %ebp
   3082c:	57                   	push   %edi
   3082d:	56                   	push   %esi
   3082e:	53                   	push   %ebx
   3082f:	83 ec 3c             	sub    $0x3c,%esp
   30832:	e8 df 04 00 00       	call   30d16 <__x86.get_pc_thunk.di>
   30837:	81 c7 c9 27 00 00    	add    $0x27c9,%edi
   3083d:	8b 54 24 50          	mov    0x50(%esp),%edx
   30841:	b9 1f 00 00 00       	mov    $0x1f,%ecx
   30846:	bb 00 00 00 00       	mov    $0x0,%ebx
   3084b:	89 d0                	mov    %edx,%eax
   3084d:	d3 f8                	sar    %cl,%eax
   3084f:	83 e0 01             	and    $0x1,%eax
   30852:	8d 1c 58             	lea    (%eax,%ebx,2),%ebx
   30855:	83 e9 01             	sub    $0x1,%ecx
   30858:	83 f9 ff             	cmp    $0xffffffff,%ecx
   3085b:	75 ee                	jne    3084b <printi+0x20>
   3085d:	ba 67 66 66 66       	mov    $0x66666667,%edx
   30862:	89 d8                	mov    %ebx,%eax
   30864:	f7 ea                	imul   %edx
   30866:	c1 fa 02             	sar    $0x2,%edx
   30869:	89 d8                	mov    %ebx,%eax
   3086b:	c1 f8 1f             	sar    $0x1f,%eax
   3086e:	29 c2                	sub    %eax,%edx
   30870:	8d 04 92             	lea    (%edx,%edx,4),%eax
   30873:	01 c0                	add    %eax,%eax
   30875:	89 de                	mov    %ebx,%esi
   30877:	29 c6                	sub    %eax,%esi
   30879:	89 f0                	mov    %esi,%eax
   3087b:	83 c0 30             	add    $0x30,%eax
   3087e:	88 44 24 12          	mov    %al,0x12(%esp)
   30882:	8d 43 09             	lea    0x9(%ebx),%eax
   30885:	83 f8 12             	cmp    $0x12,%eax
   30888:	0f 86 f4 00 00 00    	jbe    30982 <printi+0x157>
   3088e:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)
   30895:	00 
   30896:	bd 67 66 66 66       	mov    $0x66666667,%ebp
   3089b:	8d 44 24 11          	lea    0x11(%esp),%eax
   3089f:	89 44 24 0c          	mov    %eax,0xc(%esp)
   308a3:	89 d8                	mov    %ebx,%eax
   308a5:	f7 ed                	imul   %ebp
   308a7:	c1 fa 02             	sar    $0x2,%edx
   308aa:	c1 fb 1f             	sar    $0x1f,%ebx
   308ad:	89 d1                	mov    %edx,%ecx
   308af:	29 d9                	sub    %ebx,%ecx
   308b1:	89 cb                	mov    %ecx,%ebx
   308b3:	8b 44 24 08          	mov    0x8(%esp),%eax
   308b7:	8d 70 01             	lea    0x1(%eax),%esi
   308ba:	89 c8                	mov    %ecx,%eax
   308bc:	f7 ed                	imul   %ebp
   308be:	c1 fa 02             	sar    $0x2,%edx
   308c1:	89 c8                	mov    %ecx,%eax
   308c3:	c1 f8 1f             	sar    $0x1f,%eax
   308c6:	29 c2                	sub    %eax,%edx
   308c8:	8d 04 92             	lea    (%edx,%edx,4),%eax
   308cb:	01 c0                	add    %eax,%eax
   308cd:	89 ca                	mov    %ecx,%edx
   308cf:	29 c2                	sub    %eax,%edx
   308d1:	89 d0                	mov    %edx,%eax
   308d3:	83 c0 30             	add    $0x30,%eax
   308d6:	8b 54 24 0c          	mov    0xc(%esp),%edx
   308da:	88 04 32             	mov    %al,(%edx,%esi,1)
   308dd:	83 c1 09             	add    $0x9,%ecx
   308e0:	83 f9 12             	cmp    $0x12,%ecx
   308e3:	76 06                	jbe    308eb <printi+0xc0>
   308e5:	89 74 24 08          	mov    %esi,0x8(%esp)
   308e9:	eb b8                	jmp    308a3 <printi+0x78>
   308eb:	85 f6                	test   %esi,%esi
   308ed:	7e 50                	jle    3093f <printi+0x114>
   308ef:	8b 44 24 08          	mov    0x8(%esp),%eax
   308f3:	8d 74 04 12          	lea    0x12(%esp,%eax,1),%esi
   308f7:	b8 1f 00 00 00       	mov    $0x1f,%eax
   308fc:	8d 5c 24 30          	lea    0x30(%esp),%ebx
   30900:	29 d8                	sub    %ebx,%eax
   30902:	89 44 24 08          	mov    %eax,0x8(%esp)
   30906:	0f be 1e             	movsbl (%esi),%ebx
   30909:	c7 c0 e8 38 03 00    	mov    $0x338e8,%eax
   3090f:	8b 08                	mov    (%eax),%ecx
   30911:	c7 c2 f8 38 03 00    	mov    $0x338f8,%edx
   30917:	8b 02                	mov    (%edx),%eax
   30919:	8d 68 01             	lea    0x1(%eax),%ebp
   3091c:	89 2a                	mov    %ebp,(%edx)
   3091e:	83 ec 0c             	sub    $0xc,%esp
   30921:	6a 0f                	push   $0xf
   30923:	6a 00                	push   $0x0
   30925:	53                   	push   %ebx
   30926:	51                   	push   %ecx
   30927:	50                   	push   %eax
   30928:	89 fb                	mov    %edi,%ebx
   3092a:	e8 eb 03 00 00       	call   30d1a <SetVRAM>
   3092f:	83 ee 01             	sub    $0x1,%esi
   30932:	8b 44 24 28          	mov    0x28(%esp),%eax
   30936:	01 f0                	add    %esi,%eax
   30938:	83 c4 20             	add    $0x20,%esp
   3093b:	85 c0                	test   %eax,%eax
   3093d:	7f c7                	jg     30906 <printi+0xdb>
   3093f:	83 7c 24 54 00       	cmpl   $0x0,0x54(%esp)
   30944:	74 34                	je     3097a <printi+0x14f>
   30946:	c7 c3 e8 38 03 00    	mov    $0x338e8,%ebx
   3094c:	8b 03                	mov    (%ebx),%eax
   3094e:	8d 48 01             	lea    0x1(%eax),%ecx
   30951:	c7 c0 f8 38 03 00    	mov    $0x338f8,%eax
   30957:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   3095d:	ba 67 66 66 66       	mov    $0x66666667,%edx
   30962:	89 c8                	mov    %ecx,%eax
   30964:	f7 ea                	imul   %edx
   30966:	c1 fa 04             	sar    $0x4,%edx
   30969:	89 c8                	mov    %ecx,%eax
   3096b:	c1 f8 1f             	sar    $0x1f,%eax
   3096e:	29 c2                	sub    %eax,%edx
   30970:	8d 04 92             	lea    (%edx,%edx,4),%eax
   30973:	c1 e0 03             	shl    $0x3,%eax
   30976:	29 c1                	sub    %eax,%ecx
   30978:	89 0b                	mov    %ecx,(%ebx)
   3097a:	83 c4 3c             	add    $0x3c,%esp
   3097d:	5b                   	pop    %ebx
   3097e:	5e                   	pop    %esi
   3097f:	5f                   	pop    %edi
   30980:	5d                   	pop    %ebp
   30981:	c3                   	ret    
   30982:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   30989:	00 
   3098a:	e9 60 ff ff ff       	jmp    308ef <printi+0xc4>

0003098f <getmem>:
   3098f:	55                   	push   %ebp
   30990:	57                   	push   %edi
   30991:	56                   	push   %esi
   30992:	53                   	push   %ebx
   30993:	83 ec 0c             	sub    $0xc,%esp
   30996:	e8 b6 fd ff ff       	call   30751 <__x86.get_pc_thunk.bx>
   3099b:	81 c3 65 26 00 00    	add    $0x2665,%ebx
   309a1:	8b 7c 24 20          	mov    0x20(%esp),%edi
   309a5:	8b 6c 24 24          	mov    0x24(%esp),%ebp
   309a9:	e8 a2 fc ff ff       	call   30650 <io_load_eflags>
   309ae:	83 ec 0c             	sub    $0xc,%esp
   309b1:	0d 00 00 04 00       	or     $0x40000,%eax
   309b6:	50                   	push   %eax
   309b7:	e8 97 fc ff ff       	call   30653 <io_store_eflags>
   309bc:	e8 8f fc ff ff       	call   30650 <io_load_eflags>
   309c1:	89 c6                	mov    %eax,%esi
   309c3:	25 ff ff fb ff       	and    $0xfffbffff,%eax
   309c8:	89 04 24             	mov    %eax,(%esp)
   309cb:	e8 83 fc ff ff       	call   30653 <io_store_eflags>
   309d0:	83 c4 10             	add    $0x10,%esp
   309d3:	f7 c6 00 00 04 00    	test   $0x40000,%esi
   309d9:	75 19                	jne    309f4 <getmem+0x65>
   309db:	83 ec 08             	sub    $0x8,%esp
   309de:	55                   	push   %ebp
   309df:	57                   	push   %edi
   309e0:	e8 be fc ff ff       	call   306a3 <memtest_sub>
   309e5:	89 c6                	mov    %eax,%esi
   309e7:	83 c4 10             	add    $0x10,%esp
   309ea:	89 f0                	mov    %esi,%eax
   309ec:	83 c4 0c             	add    $0xc,%esp
   309ef:	5b                   	pop    %ebx
   309f0:	5e                   	pop    %esi
   309f1:	5f                   	pop    %edi
   309f2:	5d                   	pop    %ebp
   309f3:	c3                   	ret    
   309f4:	e8 61 fc ff ff       	call   3065a <load_cr0>
   309f9:	83 ec 0c             	sub    $0xc,%esp
   309fc:	0d 00 00 00 60       	or     $0x60000000,%eax
   30a01:	50                   	push   %eax
   30a02:	e8 57 fc ff ff       	call   3065e <store_cr0>
   30a07:	83 c4 08             	add    $0x8,%esp
   30a0a:	55                   	push   %ebp
   30a0b:	57                   	push   %edi
   30a0c:	e8 92 fc ff ff       	call   306a3 <memtest_sub>
   30a11:	89 c6                	mov    %eax,%esi
   30a13:	e8 42 fc ff ff       	call   3065a <load_cr0>
   30a18:	25 ff ff ff 9f       	and    $0x9fffffff,%eax
   30a1d:	89 04 24             	mov    %eax,(%esp)
   30a20:	e8 39 fc ff ff       	call   3065e <store_cr0>
   30a25:	83 c4 10             	add    $0x10,%esp
   30a28:	eb c0                	jmp    309ea <getmem+0x5b>

00030a2a <getmem_sub>:
   30a2a:	8b 44 24 04          	mov    0x4(%esp),%eax
   30a2e:	8b 54 24 08          	mov    0x8(%esp),%edx
   30a32:	39 d0                	cmp    %edx,%eax
   30a34:	77 09                	ja     30a3f <getmem_sub+0x15>
   30a36:	05 00 10 00 00       	add    $0x1000,%eax
   30a3b:	39 c2                	cmp    %eax,%edx
   30a3d:	73 f7                	jae    30a36 <getmem_sub+0xc>
   30a3f:	f3 c3                	repz ret 

00030a41 <memset>:
   30a41:	53                   	push   %ebx
   30a42:	8b 54 24 08          	mov    0x8(%esp),%edx
   30a46:	8b 5c 24 10          	mov    0x10(%esp),%ebx
   30a4a:	0f b6 4c 24 0c       	movzbl 0xc(%esp),%ecx
   30a4f:	85 db                	test   %ebx,%ebx
   30a51:	74 0d                	je     30a60 <memset+0x1f>
   30a53:	89 d0                	mov    %edx,%eax
   30a55:	01 da                	add    %ebx,%edx
   30a57:	88 08                	mov    %cl,(%eax)
   30a59:	83 c0 01             	add    $0x1,%eax
   30a5c:	39 d0                	cmp    %edx,%eax
   30a5e:	75 f7                	jne    30a57 <memset+0x16>
   30a60:	5b                   	pop    %ebx
   30a61:	c3                   	ret    

00030a62 <printf>:
   30a62:	55                   	push   %ebp
   30a63:	57                   	push   %edi
   30a64:	56                   	push   %esi
   30a65:	53                   	push   %ebx
   30a66:	83 ec 2c             	sub    $0x2c,%esp
   30a69:	e8 a4 02 00 00       	call   30d12 <__x86.get_pc_thunk.ax>
   30a6e:	05 92 25 00 00       	add    $0x2592,%eax
   30a73:	89 c6                	mov    %eax,%esi
   30a75:	89 44 24 10          	mov    %eax,0x10(%esp)
   30a79:	8b 44 24 40          	mov    0x40(%esp),%eax
   30a7d:	0f b6 00             	movzbl (%eax),%eax
   30a80:	84 c0                	test   %al,%al
   30a82:	0f 84 82 02 00 00    	je     30d0a <printf+0x2a8>
   30a88:	c7 44 24 0c 04 00 00 	movl   $0x4,0xc(%esp)
   30a8f:	00 
   30a90:	c7 c7 e8 38 03 00    	mov    $0x338e8,%edi
   30a96:	89 7c 24 18          	mov    %edi,0x18(%esp)
   30a9a:	c7 c7 f8 38 03 00    	mov    $0x338f8,%edi
   30aa0:	89 7c 24 1c          	mov    %edi,0x1c(%esp)
   30aa4:	e9 26 02 00 00       	jmp    30ccf <printf+0x26d>
   30aa9:	8b 44 24 40          	mov    0x40(%esp),%eax
   30aad:	80 78 01 64          	cmpb   $0x64,0x1(%eax)
   30ab1:	0f 84 92 00 00 00    	je     30b49 <printf+0xe7>
   30ab7:	8b 44 24 40          	mov    0x40(%esp),%eax
   30abb:	0f b6 40 01          	movzbl 0x1(%eax),%eax
   30abf:	3c 73                	cmp    $0x73,%al
   30ac1:	0f 84 a5 00 00 00    	je     30b6c <printf+0x10a>
   30ac7:	3c 63                	cmp    $0x63,%al
   30ac9:	0f 84 39 01 00 00    	je     30c08 <printf+0x1a6>
   30acf:	8b 7c 24 10          	mov    0x10(%esp),%edi
   30ad3:	c7 c5 e8 38 03 00    	mov    $0x338e8,%ebp
   30ad9:	8b 4d 00             	mov    0x0(%ebp),%ecx
   30adc:	c7 c6 f8 38 03 00    	mov    $0x338f8,%esi
   30ae2:	8b 16                	mov    (%esi),%edx
   30ae4:	8d 5a 01             	lea    0x1(%edx),%ebx
   30ae7:	89 1e                	mov    %ebx,(%esi)
   30ae9:	83 ec 0c             	sub    $0xc,%esp
   30aec:	6a 04                	push   $0x4
   30aee:	6a 00                	push   $0x0
   30af0:	0f be c0             	movsbl %al,%eax
   30af3:	50                   	push   %eax
   30af4:	51                   	push   %ecx
   30af5:	52                   	push   %edx
   30af6:	89 fb                	mov    %edi,%ebx
   30af8:	e8 1d 02 00 00       	call   30d1a <SetVRAM>
   30afd:	8b 3e                	mov    (%esi),%edi
   30aff:	b9 67 66 66 66       	mov    $0x66666667,%ecx
   30b04:	89 f8                	mov    %edi,%eax
   30b06:	f7 e9                	imul   %ecx
   30b08:	c1 fa 05             	sar    $0x5,%edx
   30b0b:	89 f8                	mov    %edi,%eax
   30b0d:	c1 f8 1f             	sar    $0x1f,%eax
   30b10:	29 c2                	sub    %eax,%edx
   30b12:	89 d3                	mov    %edx,%ebx
   30b14:	03 5d 00             	add    0x0(%ebp),%ebx
   30b17:	8d 04 92             	lea    (%edx,%edx,4),%eax
   30b1a:	c1 e0 04             	shl    $0x4,%eax
   30b1d:	29 c7                	sub    %eax,%edi
   30b1f:	89 3e                	mov    %edi,(%esi)
   30b21:	89 d8                	mov    %ebx,%eax
   30b23:	f7 e9                	imul   %ecx
   30b25:	c1 fa 04             	sar    $0x4,%edx
   30b28:	89 d8                	mov    %ebx,%eax
   30b2a:	c1 f8 1f             	sar    $0x1f,%eax
   30b2d:	29 c2                	sub    %eax,%edx
   30b2f:	8d 04 92             	lea    (%edx,%edx,4),%eax
   30b32:	c1 e0 03             	shl    $0x3,%eax
   30b35:	29 c3                	sub    %eax,%ebx
   30b37:	89 5d 00             	mov    %ebx,0x0(%ebp)
   30b3a:	83 c4 20             	add    $0x20,%esp
   30b3d:	8b 44 24 40          	mov    0x40(%esp),%eax
   30b41:	83 c0 02             	add    $0x2,%eax
   30b44:	e9 77 01 00 00       	jmp    30cc0 <printf+0x25e>
   30b49:	83 ec 08             	sub    $0x8,%esp
   30b4c:	6a 00                	push   $0x0
   30b4e:	8b 7c 24 18          	mov    0x18(%esp),%edi
   30b52:	0f be 07             	movsbl (%edi),%eax
   30b55:	50                   	push   %eax
   30b56:	e8 d0 fc ff ff       	call   3082b <printi>
   30b5b:	89 f8                	mov    %edi,%eax
   30b5d:	83 c0 04             	add    $0x4,%eax
   30b60:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   30b64:	83 c4 10             	add    $0x10,%esp
   30b67:	e9 4b ff ff ff       	jmp    30ab7 <printf+0x55>
   30b6c:	a1 00 00 00 00       	mov    0x0,%eax
   30b71:	89 44 24 14          	mov    %eax,0x14(%esp)
   30b75:	8b 74 24 0c          	mov    0xc(%esp),%esi
   30b79:	0f b6 04 06          	movzbl (%esi,%eax,1),%eax
   30b7d:	84 c0                	test   %al,%al
   30b7f:	74 bc                	je     30b3d <printf+0xdb>
   30b81:	8b 74 24 10          	mov    0x10(%esp),%esi
   30b85:	c7 c7 e8 38 03 00    	mov    $0x338e8,%edi
   30b8b:	c7 c6 f8 38 03 00    	mov    $0x338f8,%esi
   30b91:	8b 0f                	mov    (%edi),%ecx
   30b93:	8b 16                	mov    (%esi),%edx
   30b95:	8d 5a 01             	lea    0x1(%edx),%ebx
   30b98:	89 1e                	mov    %ebx,(%esi)
   30b9a:	83 ec 0c             	sub    $0xc,%esp
   30b9d:	6a 04                	push   $0x4
   30b9f:	6a 00                	push   $0x0
   30ba1:	0f be c0             	movsbl %al,%eax
   30ba4:	50                   	push   %eax
   30ba5:	51                   	push   %ecx
   30ba6:	52                   	push   %edx
   30ba7:	8b 5c 24 30          	mov    0x30(%esp),%ebx
   30bab:	e8 6a 01 00 00       	call   30d1a <SetVRAM>
   30bb0:	8b 2e                	mov    (%esi),%ebp
   30bb2:	b9 67 66 66 66       	mov    $0x66666667,%ecx
   30bb7:	89 e8                	mov    %ebp,%eax
   30bb9:	f7 e9                	imul   %ecx
   30bbb:	c1 fa 05             	sar    $0x5,%edx
   30bbe:	89 e8                	mov    %ebp,%eax
   30bc0:	c1 f8 1f             	sar    $0x1f,%eax
   30bc3:	29 c2                	sub    %eax,%edx
   30bc5:	89 d3                	mov    %edx,%ebx
   30bc7:	03 1f                	add    (%edi),%ebx
   30bc9:	8d 04 92             	lea    (%edx,%edx,4),%eax
   30bcc:	c1 e0 04             	shl    $0x4,%eax
   30bcf:	29 c5                	sub    %eax,%ebp
   30bd1:	89 2e                	mov    %ebp,(%esi)
   30bd3:	89 d8                	mov    %ebx,%eax
   30bd5:	f7 e9                	imul   %ecx
   30bd7:	c1 fa 04             	sar    $0x4,%edx
   30bda:	89 d8                	mov    %ebx,%eax
   30bdc:	c1 f8 1f             	sar    $0x1f,%eax
   30bdf:	29 c2                	sub    %eax,%edx
   30be1:	8d 04 92             	lea    (%edx,%edx,4),%eax
   30be4:	c1 e0 03             	shl    $0x3,%eax
   30be7:	29 c3                	sub    %eax,%ebx
   30be9:	89 1f                	mov    %ebx,(%edi)
   30beb:	83 44 24 2c 01       	addl   $0x1,0x2c(%esp)
   30bf0:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   30bf4:	8b 4c 24 34          	mov    0x34(%esp),%ecx
   30bf8:	0f b6 04 08          	movzbl (%eax,%ecx,1),%eax
   30bfc:	83 c4 20             	add    $0x20,%esp
   30bff:	84 c0                	test   %al,%al
   30c01:	75 8e                	jne    30b91 <printf+0x12f>
   30c03:	e9 35 ff ff ff       	jmp    30b3d <printf+0xdb>
   30c08:	8b 44 24 0c          	mov    0xc(%esp),%eax
   30c0c:	0f be 08             	movsbl (%eax),%ecx
   30c0f:	8b 7c 24 10          	mov    0x10(%esp),%edi
   30c13:	c7 c5 e8 38 03 00    	mov    $0x338e8,%ebp
   30c19:	8b 55 00             	mov    0x0(%ebp),%edx
   30c1c:	c7 c6 f8 38 03 00    	mov    $0x338f8,%esi
   30c22:	8b 06                	mov    (%esi),%eax
   30c24:	8d 58 01             	lea    0x1(%eax),%ebx
   30c27:	89 1e                	mov    %ebx,(%esi)
   30c29:	83 ec 0c             	sub    $0xc,%esp
   30c2c:	6a 04                	push   $0x4
   30c2e:	6a 00                	push   $0x0
   30c30:	51                   	push   %ecx
   30c31:	52                   	push   %edx
   30c32:	50                   	push   %eax
   30c33:	89 fb                	mov    %edi,%ebx
   30c35:	e8 e0 00 00 00       	call   30d1a <SetVRAM>
   30c3a:	8b 1e                	mov    (%esi),%ebx
   30c3c:	bf 67 66 66 66       	mov    $0x66666667,%edi
   30c41:	89 d8                	mov    %ebx,%eax
   30c43:	f7 ef                	imul   %edi
   30c45:	c1 fa 05             	sar    $0x5,%edx
   30c48:	89 d9                	mov    %ebx,%ecx
   30c4a:	c1 f9 1f             	sar    $0x1f,%ecx
   30c4d:	29 ca                	sub    %ecx,%edx
   30c4f:	89 d1                	mov    %edx,%ecx
   30c51:	03 4d 00             	add    0x0(%ebp),%ecx
   30c54:	8d 04 92             	lea    (%edx,%edx,4),%eax
   30c57:	c1 e0 04             	shl    $0x4,%eax
   30c5a:	29 c3                	sub    %eax,%ebx
   30c5c:	89 1e                	mov    %ebx,(%esi)
   30c5e:	89 c8                	mov    %ecx,%eax
   30c60:	f7 ef                	imul   %edi
   30c62:	c1 fa 04             	sar    $0x4,%edx
   30c65:	89 cf                	mov    %ecx,%edi
   30c67:	c1 ff 1f             	sar    $0x1f,%edi
   30c6a:	29 fa                	sub    %edi,%edx
   30c6c:	8d 04 92             	lea    (%edx,%edx,4),%eax
   30c6f:	c1 e0 03             	shl    $0x3,%eax
   30c72:	29 c1                	sub    %eax,%ecx
   30c74:	89 4d 00             	mov    %ecx,0x0(%ebp)
   30c77:	83 44 24 2c 01       	addl   $0x1,0x2c(%esp)
   30c7c:	83 c4 20             	add    $0x20,%esp
   30c7f:	e9 b9 fe ff ff       	jmp    30b3d <printf+0xdb>
   30c84:	8b 7c 24 10          	mov    0x10(%esp),%edi
   30c88:	c7 c0 f8 38 03 00    	mov    $0x338f8,%eax
   30c8e:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   30c94:	c7 c3 e8 38 03 00    	mov    $0x338e8,%ebx
   30c9a:	8b 03                	mov    (%ebx),%eax
   30c9c:	8d 48 01             	lea    0x1(%eax),%ecx
   30c9f:	ba 67 66 66 66       	mov    $0x66666667,%edx
   30ca4:	89 c8                	mov    %ecx,%eax
   30ca6:	f7 ea                	imul   %edx
   30ca8:	c1 fa 04             	sar    $0x4,%edx
   30cab:	89 c8                	mov    %ecx,%eax
   30cad:	c1 f8 1f             	sar    $0x1f,%eax
   30cb0:	29 c2                	sub    %eax,%edx
   30cb2:	8d 04 92             	lea    (%edx,%edx,4),%eax
   30cb5:	c1 e0 03             	shl    $0x3,%eax
   30cb8:	29 c1                	sub    %eax,%ecx
   30cba:	89 0b                	mov    %ecx,(%ebx)
   30cbc:	8b 44 24 40          	mov    0x40(%esp),%eax
   30cc0:	8d 78 01             	lea    0x1(%eax),%edi
   30cc3:	89 7c 24 40          	mov    %edi,0x40(%esp)
   30cc7:	0f b6 40 01          	movzbl 0x1(%eax),%eax
   30ccb:	84 c0                	test   %al,%al
   30ccd:	74 3b                	je     30d0a <printf+0x2a8>
   30ccf:	3c 25                	cmp    $0x25,%al
   30cd1:	0f 84 d2 fd ff ff    	je     30aa9 <printf+0x47>
   30cd7:	3c 0a                	cmp    $0xa,%al
   30cd9:	74 a9                	je     30c84 <printf+0x222>
   30cdb:	8b 74 24 1c          	mov    0x1c(%esp),%esi
   30cdf:	8b 16                	mov    (%esi),%edx
   30ce1:	8d 4a 01             	lea    0x1(%edx),%ecx
   30ce4:	89 0e                	mov    %ecx,(%esi)
   30ce6:	83 ec 0c             	sub    $0xc,%esp
   30ce9:	6a 04                	push   $0x4
   30ceb:	6a 00                	push   $0x0
   30ced:	0f be c0             	movsbl %al,%eax
   30cf0:	50                   	push   %eax
   30cf1:	8b 44 24 30          	mov    0x30(%esp),%eax
   30cf5:	ff 30                	pushl  (%eax)
   30cf7:	52                   	push   %edx
   30cf8:	8b 5c 24 30          	mov    0x30(%esp),%ebx
   30cfc:	e8 19 00 00 00       	call   30d1a <SetVRAM>
   30d01:	83 c4 20             	add    $0x20,%esp
   30d04:	8b 44 24 40          	mov    0x40(%esp),%eax
   30d08:	eb b6                	jmp    30cc0 <printf+0x25e>
   30d0a:	83 c4 2c             	add    $0x2c,%esp
   30d0d:	5b                   	pop    %ebx
   30d0e:	5e                   	pop    %esi
   30d0f:	5f                   	pop    %edi
   30d10:	5d                   	pop    %ebp
   30d11:	c3                   	ret    

00030d12 <__x86.get_pc_thunk.ax>:
   30d12:	8b 04 24             	mov    (%esp),%eax
   30d15:	c3                   	ret    

00030d16 <__x86.get_pc_thunk.di>:
   30d16:	8b 3c 24             	mov    (%esp),%edi
   30d19:	c3                   	ret    

00030d1a <SetVRAM>:
   30d1a:	8b 44 24 08          	mov    0x8(%esp),%eax
   30d1e:	8d 14 80             	lea    (%eax,%eax,4),%edx
   30d21:	c1 e2 04             	shl    $0x4,%edx
   30d24:	03 54 24 04          	add    0x4(%esp),%edx
   30d28:	66 0f be 44 24 10    	movsbw 0x10(%esp),%ax
   30d2e:	c1 e0 04             	shl    $0x4,%eax
   30d31:	66 0f be 4c 24 14    	movsbw 0x14(%esp),%cx
   30d37:	01 c8                	add    %ecx,%eax
   30d39:	c1 e0 08             	shl    $0x8,%eax
   30d3c:	66 0f be 4c 24 0c    	movsbw 0xc(%esp),%cx
   30d42:	01 c8                	add    %ecx,%eax
   30d44:	66 89 84 12 00 80 0b 	mov    %ax,0xb8000(%edx,%edx,1)
   30d4b:	00 
   30d4c:	c3                   	ret    

00030d4d <InitScreen>:
   30d4d:	b9 00 80 0b 00       	mov    $0xb8000,%ecx
   30d52:	8d 91 80 02 00 00    	lea    0x280(%ecx),%edx
   30d58:	89 c8                	mov    %ecx,%eax
   30d5a:	66 c7 00 20 00       	movw   $0x20,(%eax)
   30d5f:	83 c0 02             	add    $0x2,%eax
   30d62:	39 d0                	cmp    %edx,%eax
   30d64:	75 f4                	jne    30d5a <InitScreen+0xd>
   30d66:	81 c1 a0 00 00 00    	add    $0xa0,%ecx
   30d6c:	81 f9 00 16 0c 00    	cmp    $0xc1600,%ecx
   30d72:	75 de                	jne    30d52 <InitScreen+0x5>
   30d74:	f3 c3                	repz ret 

00030d76 <InitPallete>:
   30d76:	56                   	push   %esi
   30d77:	53                   	push   %ebx
   30d78:	83 ec 04             	sub    $0x4,%esp
   30d7b:	e8 d1 f9 ff ff       	call   30751 <__x86.get_pc_thunk.bx>
   30d80:	81 c3 80 22 00 00    	add    $0x2280,%ebx
   30d86:	e8 c5 f8 ff ff       	call   30650 <io_load_eflags>
   30d8b:	89 c6                	mov    %eax,%esi
   30d8d:	e8 ba f8 ff ff       	call   3064c <io_cli>
   30d92:	83 ec 0c             	sub    $0xc,%esp
   30d95:	56                   	push   %esi
   30d96:	e8 b8 f8 ff ff       	call   30653 <io_store_eflags>
   30d9b:	83 c4 14             	add    $0x14,%esp
   30d9e:	5b                   	pop    %ebx
   30d9f:	5e                   	pop    %esi
   30da0:	c3                   	ret    

00030da1 <main>:
   30da1:	8d 4c 24 04          	lea    0x4(%esp),%ecx
   30da5:	83 e4 f0             	and    $0xfffffff0,%esp
   30da8:	ff 71 fc             	pushl  -0x4(%ecx)
   30dab:	55                   	push   %ebp
   30dac:	89 e5                	mov    %esp,%ebp
   30dae:	53                   	push   %ebx
   30daf:	51                   	push   %ecx
   30db0:	e8 9c f9 ff ff       	call   30751 <__x86.get_pc_thunk.bx>
   30db5:	81 c3 4b 22 00 00    	add    $0x224b,%ebx
   30dbb:	c7 c0 e8 38 03 00    	mov    $0x338e8,%eax
   30dc1:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   30dc7:	c7 c0 f8 38 03 00    	mov    $0x338f8,%eax
   30dcd:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   30dd3:	e8 75 ff ff ff       	call   30d4d <InitScreen>
   30dd8:	e8 a9 01 00 00       	call   30f86 <InitPIC>
   30ddd:	e8 af 06 00 00       	call   31491 <InitGDT>
   30de2:	e8 6f 02 00 00       	call   31056 <InitIDT>
   30de7:	83 ec 08             	sub    $0x8,%esp
   30dea:	68 ff ff ff bf       	push   $0xbfffffff
   30def:	68 00 00 40 00       	push   $0x400000
   30df4:	e8 96 fb ff ff       	call   3098f <getmem>
   30df9:	c1 e8 14             	shr    $0x14,%eax
   30dfc:	c7 c2 f4 38 03 00    	mov    $0x338f4,%edx
   30e02:	89 02                	mov    %eax,(%edx)
   30e04:	e8 4c f9 ff ff       	call   30755 <InitMemory>
   30e09:	e8 40 f8 ff ff       	call   3064e <io_sti>
   30e0e:	e8 c3 00 00 00       	call   30ed6 <InitProcess>
   30e13:	c7 c0 00 39 03 00    	mov    $0x33900,%eax
   30e19:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   30e1f:	83 c4 10             	add    $0x10,%esp
   30e22:	e8 f3 f7 ff ff       	call   3061a <io_hlt>
   30e27:	eb f9                	jmp    30e22 <main+0x81>

00030e29 <Clock>:
   30e29:	53                   	push   %ebx
   30e2a:	83 ec 18             	sub    $0x18,%esp
   30e2d:	e8 1f f9 ff ff       	call   30751 <__x86.get_pc_thunk.bx>
   30e32:	81 c3 ce 21 00 00    	add    $0x21ce,%ebx
   30e38:	e8 0f f8 ff ff       	call   3064c <io_cli>
   30e3d:	c7 44 24 09 45 72 72 	movl   $0x6f727245,0x9(%esp)
   30e44:	6f 
   30e45:	66 c7 44 24 0d 72 0a 	movw   $0xa72,0xd(%esp)
   30e4c:	c6 44 24 0f 00       	movb   $0x0,0xf(%esp)
   30e51:	83 ec 0c             	sub    $0xc,%esp
   30e54:	8d 44 24 15          	lea    0x15(%esp),%eax
   30e58:	50                   	push   %eax
   30e59:	e8 04 fc ff ff       	call   30a62 <printf>
   30e5e:	e8 eb f7 ff ff       	call   3064e <io_sti>
   30e63:	83 c4 28             	add    $0x28,%esp
   30e66:	5b                   	pop    %ebx
   30e67:	c3                   	ret    

00030e68 <Clock2>:
   30e68:	53                   	push   %ebx
   30e69:	83 ec 24             	sub    $0x24,%esp
   30e6c:	e8 e0 f8 ff ff       	call   30751 <__x86.get_pc_thunk.bx>
   30e71:	81 c3 8f 21 00 00    	add    $0x218f,%ebx
   30e77:	c7 44 24 15 54 69 63 	movl   $0x6b636954,0x15(%esp)
   30e7e:	6b 
   30e7f:	66 c7 44 24 19 3a 20 	movw   $0x203a,0x19(%esp)
   30e86:	c6 44 24 1b 00       	movb   $0x0,0x1b(%esp)
   30e8b:	8d 44 24 15          	lea    0x15(%esp),%eax
   30e8f:	50                   	push   %eax
   30e90:	e8 cd fb ff ff       	call   30a62 <printf>
   30e95:	c7 c2 00 39 03 00    	mov    $0x33900,%edx
   30e9b:	8b 02                	mov    (%edx),%eax
   30e9d:	8d 48 01             	lea    0x1(%eax),%ecx
   30ea0:	89 0a                	mov    %ecx,(%edx)
   30ea2:	83 c4 08             	add    $0x8,%esp
   30ea5:	6a 01                	push   $0x1
   30ea7:	50                   	push   %eax
   30ea8:	e8 7e f9 ff ff       	call   3082b <printi>
   30ead:	83 c4 28             	add    $0x28,%esp
   30eb0:	5b                   	pop    %ebx
   30eb1:	c3                   	ret    

00030eb2 <TestA>:
   30eb2:	53                   	push   %ebx
   30eb3:	83 ec 14             	sub    $0x14,%esp
   30eb6:	e8 96 f8 ff ff       	call   30751 <__x86.get_pc_thunk.bx>
   30ebb:	81 c3 45 21 00 00    	add    $0x2145,%ebx
   30ec1:	6a 04                	push   $0x4
   30ec3:	6a 00                	push   $0x0
   30ec5:	6a 41                	push   $0x41
   30ec7:	6a 03                	push   $0x3
   30ec9:	6a 03                	push   $0x3
   30ecb:	e8 4a fe ff ff       	call   30d1a <SetVRAM>
   30ed0:	83 c4 20             	add    $0x20,%esp
   30ed3:	fb                   	sti    
   30ed4:	eb fd                	jmp    30ed3 <TestA+0x21>

00030ed6 <InitProcess>:
   30ed6:	57                   	push   %edi
   30ed7:	56                   	push   %esi
   30ed8:	53                   	push   %ebx
   30ed9:	e8 73 f8 ff ff       	call   30751 <__x86.get_pc_thunk.bx>
   30ede:	81 c3 22 21 00 00    	add    $0x2122,%ebx
   30ee4:	c7 c6 20 39 03 00    	mov    $0x33920,%esi
   30eea:	66 c7 46 44 23 00    	movw   $0x23,0x44(%esi)
   30ef0:	c7 c0 40 34 03 00    	mov    $0x33440,%eax
   30ef6:	8b 08                	mov    (%eax),%ecx
   30ef8:	8b 41 20             	mov    0x20(%ecx),%eax
   30efb:	8b 51 24             	mov    0x24(%ecx),%edx
   30efe:	89 46 46             	mov    %eax,0x46(%esi)
   30f01:	89 56 4a             	mov    %edx,0x4a(%esi)
   30f04:	8b 41 30             	mov    0x30(%ecx),%eax
   30f07:	8b 51 34             	mov    0x34(%ecx),%edx
   30f0a:	89 46 4e             	mov    %eax,0x4e(%esi)
   30f0d:	89 56 52             	mov    %edx,0x52(%esi)
   30f10:	c7 46 38 23 00 00 00 	movl   $0x23,0x38(%esi)
   30f17:	c7 46 0c 33 00 00 00 	movl   $0x33,0xc(%esi)
   30f1e:	c7 46 08 33 00 00 00 	movl   $0x33,0x8(%esi)
   30f25:	c7 46 04 33 00 00 00 	movl   $0x33,0x4(%esi)
   30f2c:	c7 46 40 33 00 00 00 	movl   $0x33,0x40(%esi)
   30f33:	c7 06 2b 00 00 00    	movl   $0x2b,(%esi)
   30f39:	8d bb b2 de ff ff    	lea    -0x214e(%ebx),%edi
   30f3f:	89 7e 34             	mov    %edi,0x34(%esi)
   30f42:	c7 46 3c ff 03 00 00 	movl   $0x3ff,0x3c(%esi)
   30f49:	83 ec 0c             	sub    $0xc,%esp
   30f4c:	6a 04                	push   $0x4
   30f4e:	6a 00                	push   $0x0
   30f50:	6a 42                	push   $0x42
   30f52:	6a 02                	push   $0x2
   30f54:	6a 00                	push   $0x0
   30f56:	e8 bf fd ff ff       	call   30d1a <SetVRAM>
   30f5b:	83 c4 18             	add    $0x18,%esp
   30f5e:	6a 01                	push   $0x1
   30f60:	ff 76 40             	pushl  0x40(%esi)
   30f63:	e8 c3 f8 ff ff       	call   3082b <printi>
   30f68:	83 c4 08             	add    $0x8,%esp
   30f6b:	6a 01                	push   $0x1
   30f6d:	57                   	push   %edi
   30f6e:	e8 b8 f8 ff ff       	call   3082b <printi>
   30f73:	83 c4 08             	add    $0x8,%esp
   30f76:	0f bf 46 44          	movswl 0x44(%esi),%eax
   30f7a:	50                   	push   %eax
   30f7b:	56                   	push   %esi
   30f7c:	e8 86 f4 ff ff       	call   30407 <restart>
   30f81:	83 c4 10             	add    $0x10,%esp
   30f84:	eb fe                	jmp    30f84 <InitProcess+0xae>

00030f86 <InitPIC>:
   30f86:	53                   	push   %ebx
   30f87:	83 ec 10             	sub    $0x10,%esp
   30f8a:	e8 c2 f7 ff ff       	call   30751 <__x86.get_pc_thunk.bx>
   30f8f:	81 c3 71 20 00 00    	add    $0x2071,%ebx
   30f95:	6a 11                	push   $0x11
   30f97:	6a 20                	push   $0x20
   30f99:	e8 99 f6 ff ff       	call   30637 <io_out8>
   30f9e:	e8 c3 f6 ff ff       	call   30666 <io_delay>
   30fa3:	83 c4 08             	add    $0x8,%esp
   30fa6:	6a 11                	push   $0x11
   30fa8:	68 a0 00 00 00       	push   $0xa0
   30fad:	e8 85 f6 ff ff       	call   30637 <io_out8>
   30fb2:	e8 af f6 ff ff       	call   30666 <io_delay>
   30fb7:	83 c4 08             	add    $0x8,%esp
   30fba:	6a 20                	push   $0x20
   30fbc:	6a 21                	push   $0x21
   30fbe:	e8 74 f6 ff ff       	call   30637 <io_out8>
   30fc3:	e8 9e f6 ff ff       	call   30666 <io_delay>
   30fc8:	83 c4 08             	add    $0x8,%esp
   30fcb:	6a 28                	push   $0x28
   30fcd:	68 a1 00 00 00       	push   $0xa1
   30fd2:	e8 60 f6 ff ff       	call   30637 <io_out8>
   30fd7:	e8 8a f6 ff ff       	call   30666 <io_delay>
   30fdc:	83 c4 08             	add    $0x8,%esp
   30fdf:	6a 04                	push   $0x4
   30fe1:	6a 21                	push   $0x21
   30fe3:	e8 4f f6 ff ff       	call   30637 <io_out8>
   30fe8:	e8 79 f6 ff ff       	call   30666 <io_delay>
   30fed:	83 c4 08             	add    $0x8,%esp
   30ff0:	6a 02                	push   $0x2
   30ff2:	68 a1 00 00 00       	push   $0xa1
   30ff7:	e8 3b f6 ff ff       	call   30637 <io_out8>
   30ffc:	e8 65 f6 ff ff       	call   30666 <io_delay>
   31001:	83 c4 08             	add    $0x8,%esp
   31004:	6a 01                	push   $0x1
   31006:	6a 21                	push   $0x21
   31008:	e8 2a f6 ff ff       	call   30637 <io_out8>
   3100d:	e8 54 f6 ff ff       	call   30666 <io_delay>
   31012:	83 c4 08             	add    $0x8,%esp
   31015:	6a 01                	push   $0x1
   31017:	68 a1 00 00 00       	push   $0xa1
   3101c:	e8 16 f6 ff ff       	call   30637 <io_out8>
   31021:	e8 40 f6 ff ff       	call   30666 <io_delay>
   31026:	83 c4 08             	add    $0x8,%esp
   31029:	68 ff 00 00 00       	push   $0xff
   3102e:	6a 21                	push   $0x21
   31030:	e8 02 f6 ff ff       	call   30637 <io_out8>
   31035:	e8 2c f6 ff ff       	call   30666 <io_delay>
   3103a:	83 c4 08             	add    $0x8,%esp
   3103d:	68 ff 00 00 00       	push   $0xff
   31042:	68 a1 00 00 00       	push   $0xa1
   31047:	e8 eb f5 ff ff       	call   30637 <io_out8>
   3104c:	e8 15 f6 ff ff       	call   30666 <io_delay>
   31051:	83 c4 18             	add    $0x18,%esp
   31054:	5b                   	pop    %ebx
   31055:	c3                   	ret    

00031056 <InitIDT>:
   31056:	57                   	push   %edi
   31057:	56                   	push   %esi
   31058:	53                   	push   %ebx
   31059:	83 ec 10             	sub    $0x10,%esp
   3105c:	e8 f0 f6 ff ff       	call   30751 <__x86.get_pc_thunk.bx>
   31061:	81 c3 9f 1f 00 00    	add    $0x1f9f,%ebx
   31067:	c7 c0 d4 34 03 00    	mov    $0x334d4,%eax
   3106d:	c7 00 00 00 30 00    	movl   $0x300000,(%eax)
   31073:	c7 c0 e0 34 03 00    	mov    $0x334e0,%eax
   31079:	8d 90 00 04 00 00    	lea    0x400(%eax),%edx
   3107f:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   31085:	83 c0 04             	add    $0x4,%eax
   31088:	39 d0                	cmp    %edx,%eax
   3108a:	75 f3                	jne    3107f <InitIDT+0x29>
   3108c:	c7 c0 9d 06 03 00    	mov    $0x3069d,%eax
   31092:	89 44 24 0c          	mov    %eax,0xc(%esp)
   31096:	c1 e8 10             	shr    $0x10,%eax
   31099:	89 c1                	mov    %eax,%ecx
   3109b:	ba 00 00 00 00       	mov    $0x0,%edx
   310a0:	c7 c7 d4 34 03 00    	mov    $0x334d4,%edi
   310a6:	c7 c6 9d 06 03 00    	mov    $0x3069d,%esi
   310ac:	89 d0                	mov    %edx,%eax
   310ae:	03 07                	add    (%edi),%eax
   310b0:	66 89 30             	mov    %si,(%eax)
   310b3:	66 c7 40 02 08 00    	movw   $0x8,0x2(%eax)
   310b9:	c6 40 04 00          	movb   $0x0,0x4(%eax)
   310bd:	c6 40 05 8e          	movb   $0x8e,0x5(%eax)
   310c1:	66 89 48 06          	mov    %cx,0x6(%eax)
   310c5:	83 c2 08             	add    $0x8,%edx
   310c8:	81 fa 00 08 00 00    	cmp    $0x800,%edx
   310ce:	75 dc                	jne    310ac <InitIDT+0x56>
   310d0:	c7 c0 d4 34 03 00    	mov    $0x334d4,%eax
   310d6:	8b 00                	mov    (%eax),%eax
   310d8:	c7 c2 52 05 03 00    	mov    $0x30552,%edx
   310de:	66 89 90 00 01 00 00 	mov    %dx,0x100(%eax)
   310e5:	66 c7 80 02 01 00 00 	movw   $0x8,0x102(%eax)
   310ec:	08 00 
   310ee:	c6 80 04 01 00 00 00 	movb   $0x0,0x104(%eax)
   310f5:	c6 80 05 01 00 00 8e 	movb   $0x8e,0x105(%eax)
   310fc:	c1 ea 10             	shr    $0x10,%edx
   310ff:	66 89 90 06 01 00 00 	mov    %dx,0x106(%eax)
   31106:	c7 c2 59 05 03 00    	mov    $0x30559,%edx
   3110c:	66 89 90 08 01 00 00 	mov    %dx,0x108(%eax)
   31113:	66 c7 80 0a 01 00 00 	movw   $0x8,0x10a(%eax)
   3111a:	08 00 
   3111c:	c6 80 0c 01 00 00 00 	movb   $0x0,0x10c(%eax)
   31123:	c6 80 0d 01 00 00 8e 	movb   $0x8e,0x10d(%eax)
   3112a:	c1 ea 10             	shr    $0x10,%edx
   3112d:	66 89 90 0e 01 00 00 	mov    %dx,0x10e(%eax)
   31134:	c7 c2 60 05 03 00    	mov    $0x30560,%edx
   3113a:	66 89 90 10 01 00 00 	mov    %dx,0x110(%eax)
   31141:	66 c7 80 12 01 00 00 	movw   $0x8,0x112(%eax)
   31148:	08 00 
   3114a:	c6 80 14 01 00 00 00 	movb   $0x0,0x114(%eax)
   31151:	c6 80 15 01 00 00 8e 	movb   $0x8e,0x115(%eax)
   31158:	c1 ea 10             	shr    $0x10,%edx
   3115b:	66 89 90 16 01 00 00 	mov    %dx,0x116(%eax)
   31162:	c7 c2 67 05 03 00    	mov    $0x30567,%edx
   31168:	66 89 90 18 01 00 00 	mov    %dx,0x118(%eax)
   3116f:	66 c7 80 1a 01 00 00 	movw   $0x8,0x11a(%eax)
   31176:	08 00 
   31178:	c6 80 1c 01 00 00 00 	movb   $0x0,0x11c(%eax)
   3117f:	c6 80 1d 01 00 00 8e 	movb   $0x8e,0x11d(%eax)
   31186:	c1 ea 10             	shr    $0x10,%edx
   31189:	66 89 90 1e 01 00 00 	mov    %dx,0x11e(%eax)
   31190:	c7 c2 6e 05 03 00    	mov    $0x3056e,%edx
   31196:	66 89 90 20 01 00 00 	mov    %dx,0x120(%eax)
   3119d:	66 c7 80 22 01 00 00 	movw   $0x8,0x122(%eax)
   311a4:	08 00 
   311a6:	c6 80 24 01 00 00 00 	movb   $0x0,0x124(%eax)
   311ad:	c6 80 25 01 00 00 8e 	movb   $0x8e,0x125(%eax)
   311b4:	c1 ea 10             	shr    $0x10,%edx
   311b7:	66 89 90 26 01 00 00 	mov    %dx,0x126(%eax)
   311be:	c7 c2 75 05 03 00    	mov    $0x30575,%edx
   311c4:	66 89 90 28 01 00 00 	mov    %dx,0x128(%eax)
   311cb:	66 c7 80 2a 01 00 00 	movw   $0x8,0x12a(%eax)
   311d2:	08 00 
   311d4:	c6 80 2c 01 00 00 00 	movb   $0x0,0x12c(%eax)
   311db:	c6 80 2d 01 00 00 8e 	movb   $0x8e,0x12d(%eax)
   311e2:	c1 ea 10             	shr    $0x10,%edx
   311e5:	66 89 90 2e 01 00 00 	mov    %dx,0x12e(%eax)
   311ec:	c7 c2 7c 05 03 00    	mov    $0x3057c,%edx
   311f2:	66 89 90 30 01 00 00 	mov    %dx,0x130(%eax)
   311f9:	66 c7 80 32 01 00 00 	movw   $0x8,0x132(%eax)
   31200:	08 00 
   31202:	c6 80 34 01 00 00 00 	movb   $0x0,0x134(%eax)
   31209:	c6 80 35 01 00 00 8e 	movb   $0x8e,0x135(%eax)
   31210:	c1 ea 10             	shr    $0x10,%edx
   31213:	66 89 90 36 01 00 00 	mov    %dx,0x136(%eax)
   3121a:	c7 c2 83 05 03 00    	mov    $0x30583,%edx
   31220:	66 89 90 38 01 00 00 	mov    %dx,0x138(%eax)
   31227:	66 c7 80 3a 01 00 00 	movw   $0x8,0x13a(%eax)
   3122e:	08 00 
   31230:	c6 80 3c 01 00 00 00 	movb   $0x0,0x13c(%eax)
   31237:	c6 80 3d 01 00 00 8e 	movb   $0x8e,0x13d(%eax)
   3123e:	c1 ea 10             	shr    $0x10,%edx
   31241:	66 89 90 3e 01 00 00 	mov    %dx,0x13e(%eax)
   31248:	c7 c2 8a 05 03 00    	mov    $0x3058a,%edx
   3124e:	66 89 90 40 01 00 00 	mov    %dx,0x140(%eax)
   31255:	66 c7 80 42 01 00 00 	movw   $0x8,0x142(%eax)
   3125c:	08 00 
   3125e:	c6 80 44 01 00 00 00 	movb   $0x0,0x144(%eax)
   31265:	c6 80 45 01 00 00 8e 	movb   $0x8e,0x145(%eax)
   3126c:	c1 ea 10             	shr    $0x10,%edx
   3126f:	66 89 90 46 01 00 00 	mov    %dx,0x146(%eax)
   31276:	c7 c2 91 05 03 00    	mov    $0x30591,%edx
   3127c:	66 89 90 48 01 00 00 	mov    %dx,0x148(%eax)
   31283:	66 c7 80 4a 01 00 00 	movw   $0x8,0x14a(%eax)
   3128a:	08 00 
   3128c:	c6 80 4c 01 00 00 00 	movb   $0x0,0x14c(%eax)
   31293:	c6 80 4d 01 00 00 8e 	movb   $0x8e,0x14d(%eax)
   3129a:	c1 ea 10             	shr    $0x10,%edx
   3129d:	66 89 90 4e 01 00 00 	mov    %dx,0x14e(%eax)
   312a4:	c7 c2 98 05 03 00    	mov    $0x30598,%edx
   312aa:	66 89 90 50 01 00 00 	mov    %dx,0x150(%eax)
   312b1:	66 c7 80 52 01 00 00 	movw   $0x8,0x152(%eax)
   312b8:	08 00 
   312ba:	c6 80 54 01 00 00 00 	movb   $0x0,0x154(%eax)
   312c1:	c6 80 55 01 00 00 8e 	movb   $0x8e,0x155(%eax)
   312c8:	c1 ea 10             	shr    $0x10,%edx
   312cb:	66 89 90 56 01 00 00 	mov    %dx,0x156(%eax)
   312d2:	c7 c2 9f 05 03 00    	mov    $0x3059f,%edx
   312d8:	66 89 90 58 01 00 00 	mov    %dx,0x158(%eax)
   312df:	66 c7 80 5a 01 00 00 	movw   $0x8,0x15a(%eax)
   312e6:	08 00 
   312e8:	c6 80 5c 01 00 00 00 	movb   $0x0,0x15c(%eax)
   312ef:	c6 80 5d 01 00 00 8e 	movb   $0x8e,0x15d(%eax)
   312f6:	c1 ea 10             	shr    $0x10,%edx
   312f9:	66 89 90 5e 01 00 00 	mov    %dx,0x15e(%eax)
   31300:	c7 c2 a6 05 03 00    	mov    $0x305a6,%edx
   31306:	66 89 90 60 01 00 00 	mov    %dx,0x160(%eax)
   3130d:	66 c7 80 62 01 00 00 	movw   $0x8,0x162(%eax)
   31314:	08 00 
   31316:	c6 80 64 01 00 00 00 	movb   $0x0,0x164(%eax)
   3131d:	c6 80 65 01 00 00 8e 	movb   $0x8e,0x165(%eax)
   31324:	c1 ea 10             	shr    $0x10,%edx
   31327:	66 89 90 66 01 00 00 	mov    %dx,0x166(%eax)
   3132e:	c7 c2 ad 05 03 00    	mov    $0x305ad,%edx
   31334:	66 89 90 68 01 00 00 	mov    %dx,0x168(%eax)
   3133b:	66 c7 80 6a 01 00 00 	movw   $0x8,0x16a(%eax)
   31342:	08 00 
   31344:	c6 80 6c 01 00 00 00 	movb   $0x0,0x16c(%eax)
   3134b:	c6 80 6d 01 00 00 8e 	movb   $0x8e,0x16d(%eax)
   31352:	c1 ea 10             	shr    $0x10,%edx
   31355:	66 89 90 6e 01 00 00 	mov    %dx,0x16e(%eax)
   3135c:	c7 c2 b4 05 03 00    	mov    $0x305b4,%edx
   31362:	66 89 90 70 01 00 00 	mov    %dx,0x170(%eax)
   31369:	66 c7 80 72 01 00 00 	movw   $0x8,0x172(%eax)
   31370:	08 00 
   31372:	c6 80 74 01 00 00 00 	movb   $0x0,0x174(%eax)
   31379:	c6 80 75 01 00 00 8e 	movb   $0x8e,0x175(%eax)
   31380:	c1 ea 10             	shr    $0x10,%edx
   31383:	66 89 90 76 01 00 00 	mov    %dx,0x176(%eax)
   3138a:	c7 c2 bb 05 03 00    	mov    $0x305bb,%edx
   31390:	66 89 90 78 01 00 00 	mov    %dx,0x178(%eax)
   31397:	66 c7 80 7a 01 00 00 	movw   $0x8,0x17a(%eax)
   3139e:	08 00 
   313a0:	c6 80 7c 01 00 00 00 	movb   $0x0,0x17c(%eax)
   313a7:	c6 80 7d 01 00 00 8e 	movb   $0x8e,0x17d(%eax)
   313ae:	c1 ea 10             	shr    $0x10,%edx
   313b1:	66 89 90 7e 01 00 00 	mov    %dx,0x17e(%eax)
   313b8:	83 ec 08             	sub    $0x8,%esp
   313bb:	50                   	push   %eax
   313bc:	68 ff 07 00 00       	push   $0x7ff
   313c1:	e8 a5 f2 ff ff       	call   3066b <load_idtr>
   313c6:	83 c4 20             	add    $0x20,%esp
   313c9:	5b                   	pop    %ebx
   313ca:	5e                   	pop    %esi
   313cb:	5f                   	pop    %edi
   313cc:	c3                   	ret    

000313cd <InitTSS>:
   313cd:	56                   	push   %esi
   313ce:	53                   	push   %ebx
   313cf:	83 ec 08             	sub    $0x8,%esp
   313d2:	e8 7a f3 ff ff       	call   30751 <__x86.get_pc_thunk.bx>
   313d7:	81 c3 29 1c 00 00    	add    $0x1c29,%ebx
   313dd:	6a 68                	push   $0x68
   313df:	6a 00                	push   $0x0
   313e1:	c7 c6 60 34 03 00    	mov    $0x33460,%esi
   313e7:	56                   	push   %esi
   313e8:	e8 54 f6 ff ff       	call   30a41 <memset>
   313ed:	c7 46 08 18 00 00 00 	movl   $0x18,0x8(%esi)
   313f4:	c7 46 04 ff 03 00 00 	movl   $0x3ff,0x4(%esi)
   313fb:	66 c7 46 66 68 00    	movw   $0x68,0x66(%esi)
   31401:	83 c4 14             	add    $0x14,%esp
   31404:	5b                   	pop    %ebx
   31405:	5e                   	pop    %esi
   31406:	c3                   	ret    

00031407 <SetGate>:
   31407:	8b 44 24 04          	mov    0x4(%esp),%eax
   3140b:	8b 54 24 08          	mov    0x8(%esp),%edx
   3140f:	66 89 10             	mov    %dx,(%eax)
   31412:	8b 4c 24 0c          	mov    0xc(%esp),%ecx
   31416:	66 89 48 02          	mov    %cx,0x2(%eax)
   3141a:	c6 40 04 00          	movb   $0x0,0x4(%eax)
   3141e:	8b 4c 24 10          	mov    0x10(%esp),%ecx
   31422:	88 48 05             	mov    %cl,0x5(%eax)
   31425:	c1 ea 10             	shr    $0x10,%edx
   31428:	66 89 50 06          	mov    %dx,0x6(%eax)
   3142c:	c3                   	ret    

0003142d <SetGDT>:
   3142d:	57                   	push   %edi
   3142e:	56                   	push   %esi
   3142f:	53                   	push   %ebx
   31430:	8b 54 24 10          	mov    0x10(%esp),%edx
   31434:	8b 4c 24 14          	mov    0x14(%esp),%ecx
   31438:	8b 44 24 18          	mov    0x18(%esp),%eax
   3143c:	8b 7c 24 1c          	mov    0x1c(%esp),%edi
   31440:	3d ff ff 0f 00       	cmp    $0xfffff,%eax
   31445:	7e 14                	jle    3145b <SetGDT+0x2e>
   31447:	81 cf 00 80 00 00    	or     $0x8000,%edi
   3144d:	8d b0 ff 0f 00 00    	lea    0xfff(%eax),%esi
   31453:	85 c0                	test   %eax,%eax
   31455:	0f 48 c6             	cmovs  %esi,%eax
   31458:	c1 f8 0c             	sar    $0xc,%eax
   3145b:	66 89 02             	mov    %ax,(%edx)
   3145e:	66 89 4a 02          	mov    %cx,0x2(%edx)
   31462:	89 ce                	mov    %ecx,%esi
   31464:	c1 fe 10             	sar    $0x10,%esi
   31467:	83 e6 0f             	and    $0xf,%esi
   3146a:	89 f3                	mov    %esi,%ebx
   3146c:	88 5a 04             	mov    %bl,0x4(%edx)
   3146f:	89 fb                	mov    %edi,%ebx
   31471:	88 5a 05             	mov    %bl,0x5(%edx)
   31474:	c1 f8 10             	sar    $0x10,%eax
   31477:	83 e0 0f             	and    $0xf,%eax
   3147a:	c1 ff 08             	sar    $0x8,%edi
   3147d:	89 fb                	mov    %edi,%ebx
   3147f:	83 e3 f0             	and    $0xfffffff0,%ebx
   31482:	09 d8                	or     %ebx,%eax
   31484:	88 42 06             	mov    %al,0x6(%edx)
   31487:	c1 e9 18             	shr    $0x18,%ecx
   3148a:	88 4a 07             	mov    %cl,0x7(%edx)
   3148d:	5b                   	pop    %ebx
   3148e:	5e                   	pop    %esi
   3148f:	5f                   	pop    %edi
   31490:	c3                   	ret    

00031491 <InitGDT>:
   31491:	57                   	push   %edi
   31492:	56                   	push   %esi
   31493:	53                   	push   %ebx
   31494:	e8 b8 f2 ff ff       	call   30751 <__x86.get_pc_thunk.bx>
   31499:	81 c3 67 1b 00 00    	add    $0x1b67,%ebx
   3149f:	c7 c0 40 34 03 00    	mov    $0x33440,%eax
   314a5:	c7 00 00 00 27 00    	movl   $0x270000,(%eax)
   314ab:	c7 c0 e4 38 03 00    	mov    $0x338e4,%eax
   314b1:	c7 00 08 00 27 00    	movl   $0x270008,(%eax)
   314b7:	c7 c0 d0 34 03 00    	mov    $0x334d0,%eax
   314bd:	c7 00 10 00 27 00    	movl   $0x270010,(%eax)
   314c3:	c7 c0 cc 34 03 00    	mov    $0x334cc,%eax
   314c9:	c7 00 18 00 27 00    	movl   $0x270018,(%eax)
   314cf:	c7 c0 c8 34 03 00    	mov    $0x334c8,%eax
   314d5:	c7 00 20 00 27 00    	movl   $0x270020,(%eax)
   314db:	c7 c0 e0 38 03 00    	mov    $0x338e0,%eax
   314e1:	c7 00 28 00 27 00    	movl   $0x270028,(%eax)
   314e7:	c7 c0 44 34 03 00    	mov    $0x33444,%eax
   314ed:	c7 00 30 00 27 00    	movl   $0x270030,(%eax)
   314f3:	c7 c0 48 34 03 00    	mov    $0x33448,%eax
   314f9:	c7 00 38 00 27 00    	movl   $0x270038,(%eax)
   314ff:	c7 c0 60 34 03 00    	mov    $0x33460,%eax
   31505:	c7 40 08 18 00 00 00 	movl   $0x18,0x8(%eax)
   3150c:	be 00 00 00 00       	mov    $0x0,%esi
   31511:	c7 c7 40 34 03 00    	mov    $0x33440,%edi
   31517:	6a 00                	push   $0x0
   31519:	6a 00                	push   $0x0
   3151b:	6a 00                	push   $0x0
   3151d:	89 f0                	mov    %esi,%eax
   3151f:	03 07                	add    (%edi),%eax
   31521:	50                   	push   %eax
   31522:	e8 06 ff ff ff       	call   3142d <SetGDT>
   31527:	83 c6 08             	add    $0x8,%esi
   3152a:	83 c4 10             	add    $0x10,%esp
   3152d:	81 fe 80 00 00 00    	cmp    $0x80,%esi
   31533:	75 e2                	jne    31517 <InitGDT+0x86>
   31535:	68 9a 40 00 00       	push   $0x409a
   3153a:	6a ff                	push   $0xffffffff
   3153c:	6a 00                	push   $0x0
   3153e:	c7 c0 e4 38 03 00    	mov    $0x338e4,%eax
   31544:	ff 30                	pushl  (%eax)
   31546:	e8 e2 fe ff ff       	call   3142d <SetGDT>
   3154b:	68 92 00 00 00       	push   $0x92
   31550:	68 ff ff 00 00       	push   $0xffff
   31555:	68 00 80 0b 00       	push   $0xb8000
   3155a:	c7 c0 d0 34 03 00    	mov    $0x334d0,%eax
   31560:	ff 30                	pushl  (%eax)
   31562:	e8 c6 fe ff ff       	call   3142d <SetGDT>
   31567:	83 c4 20             	add    $0x20,%esp
   3156a:	68 92 40 00 00       	push   $0x4092
   3156f:	6a ff                	push   $0xffffffff
   31571:	6a 00                	push   $0x0
   31573:	c7 c0 cc 34 03 00    	mov    $0x334cc,%eax
   31579:	ff 30                	pushl  (%eax)
   3157b:	e8 ad fe ff ff       	call   3142d <SetGDT>
   31580:	68 f8 40 00 00       	push   $0x40f8
   31585:	6a ff                	push   $0xffffffff
   31587:	6a 00                	push   $0x0
   31589:	c7 c0 c8 34 03 00    	mov    $0x334c8,%eax
   3158f:	ff 30                	pushl  (%eax)
   31591:	e8 97 fe ff ff       	call   3142d <SetGDT>
   31596:	83 c4 20             	add    $0x20,%esp
   31599:	68 f3 40 00 00       	push   $0x40f3
   3159e:	68 ff ff 00 00       	push   $0xffff
   315a3:	68 00 80 0b 00       	push   $0xb8000
   315a8:	c7 c0 e0 38 03 00    	mov    $0x338e0,%eax
   315ae:	ff 30                	pushl  (%eax)
   315b0:	e8 78 fe ff ff       	call   3142d <SetGDT>
   315b5:	68 f2 00 00 00       	push   $0xf2
   315ba:	6a ff                	push   $0xffffffff
   315bc:	6a 00                	push   $0x0
   315be:	c7 c0 44 34 03 00    	mov    $0x33444,%eax
   315c4:	ff 30                	pushl  (%eax)
   315c6:	e8 62 fe ff ff       	call   3142d <SetGDT>
   315cb:	83 c4 20             	add    $0x20,%esp
   315ce:	68 89 00 00 00       	push   $0x89
   315d3:	6a 67                	push   $0x67
   315d5:	ff b3 fc ff ff ff    	pushl  -0x4(%ebx)
   315db:	c7 c0 48 34 03 00    	mov    $0x33448,%eax
   315e1:	ff 30                	pushl  (%eax)
   315e3:	e8 45 fe ff ff       	call   3142d <SetGDT>
   315e8:	83 c4 08             	add    $0x8,%esp
   315eb:	c7 c0 40 34 03 00    	mov    $0x33440,%eax
   315f1:	ff 30                	pushl  (%eax)
   315f3:	6a 77                	push   $0x77
   315f5:	e8 81 f0 ff ff       	call   3067b <load_gdtr>
   315fa:	83 c4 10             	add    $0x10,%esp
   315fd:	5b                   	pop    %ebx
   315fe:	5e                   	pop    %esi
   315ff:	5f                   	pop    %edi
   31600:	c3                   	ret    

00031601 <SetLDT>:
   31601:	f3 c3                	repz ret 

00031603 <isr_handler>:
   31603:	56                   	push   %esi
   31604:	53                   	push   %ebx
   31605:	83 ec 2c             	sub    $0x2c,%esp
   31608:	e8 44 f1 ff ff       	call   30751 <__x86.get_pc_thunk.bx>
   3160d:	81 c3 f3 19 00 00    	add    $0x19f3,%ebx
   31613:	8b 74 24 38          	mov    0x38(%esp),%esi
   31617:	6a 01                	push   $0x1
   31619:	6a 02                	push   $0x2
   3161b:	e8 0b f2 ff ff       	call   3082b <printi>
   31620:	8b 56 24             	mov    0x24(%esi),%edx
   31623:	c7 c0 e0 34 03 00    	mov    $0x334e0,%eax
   31629:	8b 04 90             	mov    (%eax,%edx,4),%eax
   3162c:	83 c4 10             	add    $0x10,%esp
   3162f:	85 c0                	test   %eax,%eax
   31631:	74 0f                	je     31642 <isr_handler+0x3f>
   31633:	83 ec 0c             	sub    $0xc,%esp
   31636:	56                   	push   %esi
   31637:	ff d0                	call   *%eax
   31639:	83 c4 10             	add    $0x10,%esp
   3163c:	83 c4 24             	add    $0x24,%esp
   3163f:	5b                   	pop    %ebx
   31640:	5e                   	pop    %esi
   31641:	c3                   	ret    
   31642:	c7 44 24 0b 55 6e 68 	movl   $0x61686e55,0xb(%esp)
   31649:	61 
   3164a:	c7 44 24 0f 6e 64 6c 	movl   $0x656c646e,0xf(%esp)
   31651:	65 
   31652:	c7 44 24 13 20 69 6e 	movl   $0x746e6920,0x13(%esp)
   31659:	74 
   3165a:	c7 44 24 17 65 72 72 	movl   $0x75727265,0x17(%esp)
   31661:	75 
   31662:	c7 44 24 1b 70 74 3a 	movl   $0x203a7470,0x1b(%esp)
   31669:	20 
   3166a:	c6 44 24 1f 00       	movb   $0x0,0x1f(%esp)
   3166f:	83 ec 0c             	sub    $0xc,%esp
   31672:	8d 44 24 17          	lea    0x17(%esp),%eax
   31676:	50                   	push   %eax
   31677:	e8 e6 f3 ff ff       	call   30a62 <printf>
   3167c:	83 c4 08             	add    $0x8,%esp
   3167f:	6a 01                	push   $0x1
   31681:	ff 76 24             	pushl  0x24(%esi)
   31684:	e8 a2 f1 ff ff       	call   3082b <printi>
   31689:	83 c4 10             	add    $0x10,%esp
   3168c:	eb ae                	jmp    3163c <isr_handler+0x39>

0003168e <irq_handler>:
   3168e:	56                   	push   %esi
   3168f:	53                   	push   %ebx
   31690:	83 ec 04             	sub    $0x4,%esp
   31693:	e8 b9 f0 ff ff       	call   30751 <__x86.get_pc_thunk.bx>
   31698:	81 c3 68 19 00 00    	add    $0x1968,%ebx
   3169e:	8b 74 24 10          	mov    0x10(%esp),%esi
   316a2:	83 7e 24 27          	cmpl   $0x27,0x24(%esi)
   316a6:	77 2e                	ja     316d6 <irq_handler+0x48>
   316a8:	83 ec 08             	sub    $0x8,%esp
   316ab:	6a 20                	push   $0x20
   316ad:	6a 20                	push   $0x20
   316af:	e8 83 ef ff ff       	call   30637 <io_out8>
   316b4:	8b 56 24             	mov    0x24(%esi),%edx
   316b7:	c7 c0 e0 34 03 00    	mov    $0x334e0,%eax
   316bd:	8b 04 90             	mov    (%eax,%edx,4),%eax
   316c0:	83 c4 10             	add    $0x10,%esp
   316c3:	85 c0                	test   %eax,%eax
   316c5:	74 09                	je     316d0 <irq_handler+0x42>
   316c7:	83 ec 0c             	sub    $0xc,%esp
   316ca:	56                   	push   %esi
   316cb:	ff d0                	call   *%eax
   316cd:	83 c4 10             	add    $0x10,%esp
   316d0:	83 c4 04             	add    $0x4,%esp
   316d3:	5b                   	pop    %ebx
   316d4:	5e                   	pop    %esi
   316d5:	c3                   	ret    
   316d6:	83 ec 08             	sub    $0x8,%esp
   316d9:	6a 20                	push   $0x20
   316db:	68 a0 00 00 00       	push   $0xa0
   316e0:	e8 52 ef ff ff       	call   30637 <io_out8>
   316e5:	83 c4 10             	add    $0x10,%esp
   316e8:	eb be                	jmp    316a8 <irq_handler+0x1a>

000316ea <isr0_handler>:
   316ea:	53                   	push   %ebx
   316eb:	83 ec 24             	sub    $0x24,%esp
   316ee:	e8 5e f0 ff ff       	call   30751 <__x86.get_pc_thunk.bx>
   316f3:	81 c3 0d 19 00 00    	add    $0x190d,%ebx
   316f9:	c7 44 24 10 49 6e 74 	movl   $0x65746e49,0x10(%esp)
   31700:	65 
   31701:	c7 44 24 14 72 72 75 	movl   $0x70757272,0x14(%esp)
   31708:	70 
   31709:	c7 44 24 18 74 20 30 	movl   $0x302074,0x18(%esp)
   31710:	00 
   31711:	8d 44 24 10          	lea    0x10(%esp),%eax
   31715:	50                   	push   %eax
   31716:	e8 47 f3 ff ff       	call   30a62 <printf>
   3171b:	83 c4 08             	add    $0x8,%esp
   3171e:	6a 01                	push   $0x1
   31720:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   31724:	ff 70 24             	pushl  0x24(%eax)
   31727:	e8 ff f0 ff ff       	call   3082b <printi>
   3172c:	83 c4 28             	add    $0x28,%esp
   3172f:	5b                   	pop    %ebx
   31730:	c3                   	ret    

00031731 <register_interrupt_handler>:
   31731:	53                   	push   %ebx
   31732:	83 ec 10             	sub    $0x10,%esp
   31735:	e8 17 f0 ff ff       	call   30751 <__x86.get_pc_thunk.bx>
   3173a:	81 c3 c6 18 00 00    	add    $0x18c6,%ebx
   31740:	8b 44 24 1c          	mov    0x1c(%esp),%eax
   31744:	c7 c2 e0 34 03 00    	mov    $0x334e0,%edx
   3174a:	8b 4c 24 18          	mov    0x18(%esp),%ecx
   3174e:	89 04 8a             	mov    %eax,(%edx,%ecx,4)
   31751:	6a 01                	push   $0x1
   31753:	50                   	push   %eax
   31754:	e8 d2 f0 ff ff       	call   3082b <printi>
   31759:	83 c4 18             	add    $0x18,%esp
   3175c:	5b                   	pop    %ebx
   3175d:	c3                   	ret    
